//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfWcfClient.MangaReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manga", Namespace="http://schemas.datacontract.org/2004/07/WCF_Library")]
    [System.SerializableAttribute()]
    public partial class Manga : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MangaReference.IManga", CallbackContract=typeof(WpfWcfClient.MangaReference.IMangaCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IManga {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/Add", ReplyAction="http://tempuri.org/IManga/AddResponse")]
        void Add(WpfWcfClient.MangaReference.Manga newManga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/Add", ReplyAction="http://tempuri.org/IManga/AddResponse")]
        System.Threading.Tasks.Task AddAsync(WpfWcfClient.MangaReference.Manga newManga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/Edit", ReplyAction="http://tempuri.org/IManga/EditResponse")]
        void Edit(int id, WpfWcfClient.MangaReference.Manga manga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/Edit", ReplyAction="http://tempuri.org/IManga/EditResponse")]
        System.Threading.Tasks.Task EditAsync(int id, WpfWcfClient.MangaReference.Manga manga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/Delete", ReplyAction="http://tempuri.org/IManga/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/Delete", ReplyAction="http://tempuri.org/IManga/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/GetAll", ReplyAction="http://tempuri.org/IManga/GetAllResponse")]
        WpfWcfClient.MangaReference.Manga[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/GetAll", ReplyAction="http://tempuri.org/IManga/GetAllResponse")]
        System.Threading.Tasks.Task<WpfWcfClient.MangaReference.Manga[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/GetAllByAuthor", ReplyAction="http://tempuri.org/IManga/GetAllByAuthorResponse")]
        WpfWcfClient.MangaReference.Manga[] GetAllByAuthor(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManga/GetAllByAuthor", ReplyAction="http://tempuri.org/IManga/GetAllByAuthorResponse")]
        System.Threading.Tasks.Task<WpfWcfClient.MangaReference.Manga[]> GetAllByAuthorAsync(string author);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IManga/Contains")]
        void Contains(WpfWcfClient.MangaReference.Manga manga);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IManga/Contains")]
        System.Threading.Tasks.Task ContainsAsync(WpfWcfClient.MangaReference.Manga manga);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMangaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IManga/ContainsResult")]
        void ContainsResult(bool result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMangaChannel : WpfWcfClient.MangaReference.IManga, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MangaClient : System.ServiceModel.DuplexClientBase<WpfWcfClient.MangaReference.IManga>, WpfWcfClient.MangaReference.IManga {
        
        public MangaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MangaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MangaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MangaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MangaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Add(WpfWcfClient.MangaReference.Manga newManga) {
            base.Channel.Add(newManga);
        }
        
        public System.Threading.Tasks.Task AddAsync(WpfWcfClient.MangaReference.Manga newManga) {
            return base.Channel.AddAsync(newManga);
        }
        
        public void Edit(int id, WpfWcfClient.MangaReference.Manga manga) {
            base.Channel.Edit(id, manga);
        }
        
        public System.Threading.Tasks.Task EditAsync(int id, WpfWcfClient.MangaReference.Manga manga) {
            return base.Channel.EditAsync(id, manga);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public WpfWcfClient.MangaReference.Manga[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WpfWcfClient.MangaReference.Manga[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public WpfWcfClient.MangaReference.Manga[] GetAllByAuthor(string author) {
            return base.Channel.GetAllByAuthor(author);
        }
        
        public System.Threading.Tasks.Task<WpfWcfClient.MangaReference.Manga[]> GetAllByAuthorAsync(string author) {
            return base.Channel.GetAllByAuthorAsync(author);
        }
        
        public void Contains(WpfWcfClient.MangaReference.Manga manga) {
            base.Channel.Contains(manga);
        }
        
        public System.Threading.Tasks.Task ContainsAsync(WpfWcfClient.MangaReference.Manga manga) {
            return base.Channel.ContainsAsync(manga);
        }
    }
}
